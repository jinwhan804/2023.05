<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .line{
            overflow: hidden;
        }
        .seat{
            margin: 2px;
            float: left;
            width: 30px;
            height: 30px;
            border-radius: 3px;
        }
        .enable{
            background-color: gray;
        }
        .disable{
            background-color: green;
        }
    </style>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <div>비행기</div>
    <!-- select : 선택 상자 태그 -->
    <select name="" id="selectBtn">
        <option value="0">1번</option>
        <option value="1">2번</option>
        <option value="2">3번</option>
    </select>
    <div id="content"></div>
</body>
<script>
    window.onload = ()=>{
        const socket = io.connect();
        socket.on('reserve',(data)=>{
            if(data.selectCount == selectBtn.selectedIndex){
                let target = document.querySelector(`div[data-x="${data.x}"][data-y="${data.y}"]`);
                target.classList.remove('enable');
                target.classList.add('disable');
            }
        })

        let selectCount = 0;

        selectBtn.onchange = function(){
            content.innerHTML = "";
            // select 태그의 선택한 옵션의 value를 호출한다.
            selectCount = this.selectedIndex;
            console.log(selectCount);

            getSeats(selectCount);
        }
        
        // 시트 클릭해서 예약하는 함수
        const onClickSeat = function(){
            if(this.classList.contains('disable')){
                // 이미 예약이 되어 있으면 여기서 종료
                return;
            }

            // 어트리뷰트 데이터 속성을 호출. 매개 변수로 가져올 속성 이름
            let x = this.getAttribute('data-x');
            let y = this.getAttribute('data-y');

            if(confirm('이 좌석을 예약하시겠습니까?')){
                // socket 이벤트 푸쉬 예정
                socket.emit('reserve',{
                    x,
                    y,
                    selectCount
                })
            }else{
                alert('진행을 취소합니다.');
            }
        }
        
        // 시트 생성 함수
        function getSeats(selectedIndex){
            // 요청 응답으로 시트 가져올 예정
            // axios 주로 사용될 예정
            // CDN으로 사용 예정
            // 요청은 get으로 받고 매개 변수는 id 값으로 요청
            axios.get('/seats/' + selectedIndex).then((e)=>{
                // 요청 이후 응답 받은 값 e = 시트 배열
                console.log(e);
                let {data} = e;
                data.forEach((line,indexY) => {
                    let lineElem = document.createElement('div');
                    // 시트들의 열
                    lineElem.classList.add('line');

                    line.forEach((seat,indexX)=>{
                        let seatElem = document.createElement('div');
                        seatElem.classList.add('seat');
                        // 데이터 속성이라는 어트리뷰트 속성 사용
                        // setAttribute : 속성 추가 메소드
                        // 첫 번째 매개 변수는 속성의 이름
                        // 두 번째 매개 변수는 속성의 값
                        seatElem.setAttribute('data-x',indexX);
                        seatElem.setAttribute('data-y',indexY);
                        // 빈공간, 예약 가능한 시트, 이미 예약된 시트
                        if(seat == 1){
                            seatElem.classList.add('enable');
                            seatElem.addEventListener('click',onClickSeat);
                        }else if(seat == 2){
                            seatElem.classList.add('disable');
                        }

                        lineElem.appendChild(seatElem);
                    });
                    content.appendChild(lineElem);
                });
            })
        }

        getSeats(0);
    }
</script>
</html>